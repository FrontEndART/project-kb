package jetbrains.mps.ide.httpsupport.manager.plugin;

/*Generated by MPS */

import org.jetbrains.io.CustomPortServerManagerBase;
import org.apache.log4j.Logger;
import org.apache.log4j.LogManager;
import java.net.ServerSocket;
import java.net.InetSocketAddress;
import java.net.BindException;
import java.io.IOException;
import org.apache.log4j.Level;

public class MPSIntegrationPortManager extends CustomPortServerManagerBase {
  private static final Logger LOG = LogManager.getLogger(MPSIntegrationPortManager.class);

  public static final int PORT_FIRST = 63330;
  public static final int PORT_LAST = 63339;

  public int port = -1;

  @Override
  public int getPort() {
    if (port == -1) {
      port = findPort();
    }
    return port;
  }

  private int findPort() {
    for (int port = PORT_FIRST; port < PORT_LAST; port++) {
      ServerSocket socket;
      try {
        socket = new ServerSocket();
        socket.setReuseAddress(false);
        socket.bind(new InetSocketAddress(port));
        socket.close();

        return port;
      } catch (BindException e) {
        // continue  
      } catch (IOException e) {
        if (LOG.isEnabledFor(Level.ERROR)) {
          LOG.error("IOException while traversing ports for integration port manager", e);
        }
      }
    }
    return PORT_LAST;
  }

  @Override
  public void cannotBind(Exception e, int port) {
    HttpSupportPluginNotifications.showWarning("Built-in server cannot bind to any port from" + PORT_FIRST + " to " + PORT_LAST + ". Integration with YouTrack/TeamCity is disabled ");
  }

  @Override
  public boolean isAvailableExternally() {
    return false;
  }

  public static int getCurrentPort() {
    return EP_NAME.findExtension(MPSIntegrationPortManager.class).getPort();
  }
}
