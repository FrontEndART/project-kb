package jetbrains.mps.ide.httpsupport.manager.plugin;

/*Generated by MPS */

import org.jetbrains.io.CustomPortServerManagerBase;
import jetbrains.mps.util.annotation.ToRemove;
import com.intellij.openapi.util.registry.Registry;
import com.intellij.openapi.util.registry.RegistryValue;
import com.intellij.openapi.util.registry.RegistryValueListener;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.ide.BuiltInServerManager;

public class MPSInternalPortManager extends CustomPortServerManagerBase {

  private static final String PORT_KEY = "ide.httpsupport.internalPort";

  /**
   * 
   * @deprecated Use #getCurrentPort instead, modifying the field doesn't affect real port
   */
  @Deprecated
  @ToRemove(version = 2019.2)
  public static int PORT = 63220;

  public MPSInternalPortManager() {
    Registry.addKey(PORT_KEY, "Port for MPS internal requests (i.e. opening node)", "63320", false);
    RegistryValue value = Registry.get(PORT_KEY);
    PORT = value.asInteger();
    value.addListener(new RegistryValueListener.Adapter() {

      @Override
      public void afterValueChanged(@NotNull RegistryValue value) {
        PORT = value.asInteger();
        portChanged();
      }
    }, BuiltInServerManager.getInstance().getServerDisposable());
  }

  @Override
  public int getPort() {
    return Registry.intValue(PORT_KEY);
  }

  @Override
  public void cannotBind(Exception e, int port) {
    HttpSupportPluginNotifications.showWarning("Built-in server cannot bind to port " + getPort() + ". Openning node on HTTP request disabled");
  }


  @Override
  public boolean isAvailableExternally() {
    return true;
  }

  public static boolean isEnabled() {
    return EP_NAME.findExtension(MPSInternalPortManager.class).isBound();
  }

  public static int getCurrentPort() {
    // default needed if http-support is loaded as pure modules, not as an idea plugin (i.e. in generate task, w/o IDEA platform). Even in this case, we should support generation of http-support language concepts, that uses MPSInternalPortManager internally. For such cases returning default value == 63220 (Regardless absence of idea plugins, port key can be customized with vm option -Dide.httpsupport.internalPort) 
    return Registry.intValue(PORT_KEY, 63320);
  }
}
